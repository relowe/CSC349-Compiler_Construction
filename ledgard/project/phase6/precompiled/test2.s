.section .bss
	.lcomm	P,4
	.lcomm	Q,4
	.lcomm	NOT_P,4
	.lcomm	NOT_Q,4
	.lcomm	P_AND_Q,4
	.lcomm	P_OR_Q,4

.section .text
.globl  _start
_start:
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	pushl   $1
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	pushl   $1
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jz      label1
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label1:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jnz     label2
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label2:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jz      label3
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label3:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jnz     label4
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label4:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jz      label5
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label5:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jnz     label6
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label6:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jz      label7
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label7:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	movl    (%esp),%eax
	testl   %eax,%eax
	jnz     label8
	popl    %eax
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
label8:
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_P(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    NOT_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_AND_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    P_OR_Q(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline

	xorl    %ebx,%ebx
	movl    $1,%eax
	int     $0x80
