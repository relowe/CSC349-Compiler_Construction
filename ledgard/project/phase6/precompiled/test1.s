.section .bss
	.lcomm	A,4
	.lcomm	B,4
	.lcomm	C,40
	.lcomm	D,40
	.lcomm	E,400
	.lcomm	F,400
	.lcomm	I,4
	.lcomm	J,4
	.lcomm	K,4
	.lcomm	L,4

.section .text
.globl  _start
_start:
	xorl    %esi,%esi
	leal    A(%esi),%eax
	pushl   %eax
	pushl   $0
	pushl   $99
	popl    %ebx
	popl    %eax
	subl    %ebx,%eax
	jo      overflow
	pushl   %eax
	pushl   $0
	popl    %ebx
	popl    %eax
	addl    %ebx,%eax
	jo      overflow
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    B(%esi),%eax
	pushl   %eax
	pushl   $1
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    A(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_dec
	xorl    %esi,%esi
	leal    B(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline
	xorl    %esi,%esi
	leal    A(%esi),%eax
	pushl   %eax
	pushl   $99999
	xorl    %esi,%esi
	leal    A(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %ebx
	test    %ebx,%ebx
	jz      divide0
	popl    %eax
	cltd
	idivl   %ebx
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    B(%esi),%eax
	pushl   %eax
	pushl   $0
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    B(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	leal    A(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_dec
	call    print_newline
	xorl    %esi,%esi
	leal    A(%esi),%eax
	pushl   %eax
	pushl   $2000000000
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    B(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	leal    B(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	leal    A(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_dec
	xorl    %esi,%esi
	leal    B(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline
	xorl    %esi,%esi
	pushl   %esi
	pushl   $11
	popl    %eax
	popl    %esi
	cmpl    $20,%eax
	ja      out_of_range
	subl    $11,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    D(%esi),%eax
	pushl   %eax
	pushl   $1
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	pushl   %esi
	pushl   $40
	popl    %eax
	popl    %esi
	cmpl    $45,%eax
	ja      out_of_range
	subl    $36,%eax
	jb      out_of_range
	imull   $40,%eax
	addl    %eax,%esi
	pushl   %esi
	pushl   $50
	popl    %eax
	popl    %esi
	cmpl    $55,%eax
	ja      out_of_range
	subl    $46,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    F(%esi),%eax
	pushl   %eax
	pushl   $1
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	pushl   %esi
	pushl   $11
	popl    %eax
	popl    %esi
	cmpl    $20,%eax
	ja      out_of_range
	subl    $11,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    D(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	pushl   %esi
	pushl   $12
	popl    %eax
	popl    %esi
	cmpl    $20,%eax
	ja      out_of_range
	subl    $11,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    D(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	pushl   %esi
	pushl   $36
	popl    %eax
	popl    %esi
	cmpl    $45,%eax
	ja      out_of_range
	subl    $36,%eax
	jb      out_of_range
	imull   $40,%eax
	addl    %eax,%esi
	pushl   %esi
	pushl   $46
	popl    %eax
	popl    %esi
	cmpl    $55,%eax
	ja      out_of_range
	subl    $46,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    F(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline
	xorl    %esi,%esi
	pushl   %esi
	pushl   $22
	popl    %eax
	popl    %esi
	cmpl    $20,%eax
	ja      out_of_range
	subl    $11,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    D(%esi),%eax
	pushl   %eax
	xorl    %esi,%esi
	pushl   %esi
	pushl   $22
	popl    %eax
	popl    %esi
	cmpl    $20,%eax
	ja      out_of_range
	subl    $11,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    D(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	xorl    $01,%eax
	pushl   %eax
	popl    %eax
	popl    %ebx
	movl    %eax,(%ebx)
	xorl    %esi,%esi
	pushl   %esi
	pushl   $11
	popl    %eax
	popl    %esi
	cmpl    $20,%eax
	ja      out_of_range
	subl    $11,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    D(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	pushl   %esi
	pushl   $12
	popl    %eax
	popl    %esi
	cmpl    $20,%eax
	ja      out_of_range
	subl    $11,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    D(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	xorl    %esi,%esi
	pushl   %esi
	pushl   $36
	popl    %eax
	popl    %esi
	cmpl    $45,%eax
	ja      out_of_range
	subl    $36,%eax
	jb      out_of_range
	imull   $40,%eax
	addl    %eax,%esi
	pushl   %esi
	pushl   $46
	popl    %eax
	popl    %esi
	cmpl    $55,%eax
	ja      out_of_range
	subl    $46,%eax
	jb      out_of_range
	imull   $4,%eax
	addl    %eax,%esi
	leal    F(%esi),%eax
	pushl   %eax
	popl    %eax
	pushl   (%eax)
	popl    %eax
	call    print_bool
	call    print_newline

	xorl    %ebx,%ebx
	movl    $1,%eax
	int     $0x80
